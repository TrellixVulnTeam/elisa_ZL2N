import numpy as np
from elisa.analytics.binary.mcmc import central_rv


def main():
    phases = np.arange(-0.6, 0.62, 0.02)
    rv = {'primary': np.array([111221.02018955, 102589.40515112, 92675.34114568,
                               81521.98280508, 69189.28515476, 55758.52165462,
                               41337.34984718, 26065.23187763, 10118.86370365,
                               -6282.93249474, -22875.63138097, -39347.75579673,
                               -55343.14273712, -70467.93174445, -84303.24303593,
                               -96423.915992, -106422.70195531, -113938.05716509,
                               -118682.43573797, -120467.13803823, -119219.71866465,
                               -114990.89801808, -107949.71016039, -98367.77975255,
                               -86595.51823899, -73034.14124119, -58107.52819161,
                               -42237.21613808, -25822.61388457, -9227.25025377,
                               7229.16722243, 23273.77242388, 38679.82691287,
                               53263.47669152, 66879.02978007, 79413.57620399,
                               90781.53548261, 100919.51001721, 109781.66096297,
                               117335.70723602, 123559.57210929, 128438.6567666,
                               131963.69775175, 134129.15836278, 134932.10727626,
                               134371.54717101, 132448.1692224, 129164.5242993,
                               124525.61727603, 118539.94602416, 111221.02018955,
                               102589.40515112, 92675.34114568, 81521.98280508,
                               69189.28515476, 55758.52165462, 41337.34984718,
                               26065.23187763, 10118.86370365, -6282.93249474,
                               -22875.63138097]),
          'secondary': np.array([-144197.83633559, -128660.92926642, -110815.61405663,
                                 -90739.56904355, -68540.71327298, -44365.33897272,
                                 -18407.22971932, 9082.58262586, 37786.04533903,
                                 67309.27849613, 97176.13649135, 126825.96043971,
                                 155617.65693242, 182842.27714561, 207745.83747028,
                                 229563.04879121, 247560.86352515, 261088.50290277,
                                 269628.38433395, 272840.84847442, 270595.49360196,
                                 262983.61643814, 250309.4782943, 233062.00356019,
                                 211871.93283578, 187461.45423975, 160593.55075051,
                                 132026.98905414, 102480.70499782, 72609.05046238,
                                 42987.49900522, 14107.20964261, -13623.68843756,
                                 -39874.25803914, -64382.25359853, -86944.43716158,
                                 -107406.76386309, -125655.11802538, -141606.98972774,
                                 -155204.27301923, -166407.22979112, -175189.58217428,
                                 -181534.65594755, -185432.4850474, -186877.79309168,
                                 -185868.78490222, -182406.70459473, -176496.14373313,
                                 -168146.11109126, -157371.90283788, -144197.83633559,
                                 -128660.92926641, -110815.61405663, -90739.56904355,
                                 -68540.71327297, -44365.33897271, -18407.22971932,
                                 9082.58262586, 37786.04533903, 67309.27849613,
                                 97176.13649135])}
    rv_initial_parameters = [
        {
            'value': 0.2,
            'param': 'eccentricity',
            'fixed': False,
            'min': 0.0,
            'max': 0.5

        },
        {
            'value': 10.0,  # 4.219470628180749
            'param': 'asini',
            'fixed': False,
            'min': 1.0,
            'max': 20.0

        },
        {
            'value': 1.0,  # 1.0 / 1.8
            'param': 'mass_ratio',
            'fixed': False,
            'min': 0,
            'max': 10
        },
        {
            'value': 0.0,
            'param': 'argument_of_periastron',
            'fixed': True
        },
        {
            'value': 15000.0,
            'param': 'gamma',
            'fixed': False,
            'min': 10000.0,
            'max': 30000.0
        }
    ]

    central_rv.fit(xs=phases, ys=rv, period=0.6, x0=rv_initial_parameters, nwalkers=10, nsteps=10000,
                   nsteps_burn_in=1000)
    result = central_rv.restore_flat_chain(central_rv.last_fname)
    central_rv.plot.corner(result['flat_chain'], result['labels'], renorm=result['normalization'])


if __name__ == '__main__':
    main()
